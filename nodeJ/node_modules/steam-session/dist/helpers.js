"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMachineId = exports.defaultUserAgent = exports.getSpoofedHostname = exports.isJwtValidForAudience = exports.decodeJwt = exports.API_HEADERS = exports.eresultError = void 0;
const user_agents_1 = require("@doctormckay/user-agents");
const crypto_1 = require("crypto");
const os_1 = require("os");
const EResult_1 = __importDefault(require("./enums-steam/EResult"));
function eresultError(result, errorMessage) {
    let resultMsg = result.toString(); // this is the numeric value, as a string
    resultMsg = EResult_1.default[resultMsg] || resultMsg; // this is now the string representation of the EResult value
    let err = new Error(errorMessage || resultMsg);
    // @ts-ignore
    err.eresult = result;
    return err;
}
exports.eresultError = eresultError;
exports.API_HEADERS = {
    accept: 'application/json, text/plain, */*',
    'sec-fetch-site': 'cross-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty'
};
function decodeJwt(jwt) {
    let parts = jwt.split('.');
    if (parts.length != 3) {
        throw new Error('Invalid JWT');
    }
    let standardBase64 = parts[1].replace(/-/g, '+')
        .replace(/_/g, '/');
    return JSON.parse(Buffer.from(standardBase64, 'base64').toString('utf8'));
}
exports.decodeJwt = decodeJwt;
function isJwtValidForAudience(jwt, audience, steamId) {
    let decodedToken;
    try {
        decodedToken = decodeJwt(jwt);
    }
    catch (ex) {
        return false;
    }
    // Check if the steamid matches
    if (steamId && decodedToken.sub != steamId) {
        return false;
    }
    return (decodedToken.aud || []).includes(audience);
}
exports.isJwtValidForAudience = isJwtValidForAudience;
function getSpoofedHostname() {
    let hash = (0, crypto_1.createHash)('sha1');
    hash.update((0, os_1.hostname)());
    let sha1 = hash.digest();
    const CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    let output = 'DESKTOP-';
    for (let i = 0; i < 7; i++) {
        output += CHARS[sha1[i] % CHARS.length];
    }
    return output;
}
exports.getSpoofedHostname = getSpoofedHostname;
function defaultUserAgent() {
    return (0, user_agents_1.chrome)();
}
exports.defaultUserAgent = defaultUserAgent;
function createMachineId(accountName) {
    return Buffer.concat([
        byteToBuffer(0),
        stringToBuffer('MessageObject'),
        byteToBuffer(1),
        stringToBuffer('BB3'),
        stringToBuffer(sha1(`SteamUser Hash BB3 ${accountName}`)),
        byteToBuffer(1),
        stringToBuffer('FF2'),
        stringToBuffer(sha1(`SteamUser Hash FF2 ${accountName}`)),
        byteToBuffer(1),
        stringToBuffer('3B3'),
        stringToBuffer(sha1(`SteamUser Hash 3B3 ${accountName}`)),
        byteToBuffer(8),
        byteToBuffer(8)
    ]);
    function sha1(input) {
        let hash = (0, crypto_1.createHash)('sha1');
        hash.update(input, 'utf8');
        return hash.digest('hex');
    }
    function stringToBuffer(input) {
        let b = Buffer.from(input, 'utf8');
        return Buffer.concat([
            b,
            Buffer.from('00', 'hex')
        ]);
    }
    function byteToBuffer(input) {
        let b = Buffer.alloc(1);
        b[0] = input;
        return b;
    }
}
exports.createMachineId = createMachineId;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDBEQUFnRDtBQUNoRCxtQ0FBa0M7QUFDbEMsMkJBQTRCO0FBRTVCLG9FQUE0QztBQUU1QyxTQUFnQixZQUFZLENBQUMsTUFBYyxFQUFFLFlBQW9CO0lBQ2hFLElBQUksU0FBUyxHQUFVLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLHlDQUF5QztJQUNuRixTQUFTLEdBQUcsaUJBQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyw2REFBNkQ7SUFFMUcsSUFBSSxHQUFHLEdBQUcsSUFBSSxLQUFLLENBQUMsWUFBWSxJQUFJLFNBQVMsQ0FBQyxDQUFDO0lBQy9DLGFBQWE7SUFDYixHQUFHLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUNyQixPQUFPLEdBQUcsQ0FBQztBQUNaLENBQUM7QUFSRCxvQ0FRQztBQUVZLFFBQUEsV0FBVyxHQUFHO0lBQzFCLE1BQU0sRUFBRSxtQ0FBbUM7SUFDM0MsZ0JBQWdCLEVBQUUsWUFBWTtJQUM5QixnQkFBZ0IsRUFBRSxNQUFNO0lBQ3hCLGdCQUFnQixFQUFFLE9BQU87Q0FDekIsQ0FBQztBQUVGLFNBQWdCLFNBQVMsQ0FBQyxHQUFVO0lBQ25DLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0IsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtRQUN0QixNQUFNLElBQUksS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0tBQy9CO0lBRUQsSUFBSSxjQUFjLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDO1NBQzlDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFckIsT0FBTyxJQUFJLENBQUMs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