"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Parse an ordered args string. For example, this string:
 * one two "three three" four\ four five
 * is parsed into: ["one", "two", "three three", "four four", "five"]
 * Double spaces between args are removed. But empty args in quotes are preserved.
 * @param {string} input
 * @return {string[]}
 */
function orderedArgs(input) {
    let buf = '', args = [], quoted = false, argWasQuoted = false, escaped = false, c;
    for (let i = 0; i < input.length; i++) {
        c = input.charAt(i);
        if (c == ' ' && !quoted && !escaped) {
            // end of current arg
            if (buf.length > 0 || argWasQuoted) {
                // ignore empty ones e.g. "one  two" should be ["one", "two"] and not ["one", "", "two"]
                args.push(buf);
            }
            buf = '';
            argWasQuoted = false;
        }
        else if (c == '"' && !escaped) {
            // beginning or end of a quoted arg
            quoted = !quoted;
            argWasQuoted = quoted ? true : argWasQuoted;
        }
        else if (c == '\\' && !escaped) {
            // next character is escaped
            escaped = true;
        }
        else {
            // middle of an arg, push its character onto the buffer
            escaped = false;
            buf += c;
        }
    }
    // if there's anything left over, push it as an arg
    if (buf.length > 0) {
        args.push(buf);
    }
    return args;
}
exports.default = orderedArgs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJlZEFyZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL3BhcnNpbmcvb3JkZXJlZEFyZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7OztHQU9HO0FBQ0gsU0FBd0IsV0FBVyxDQUFDLEtBQWE7SUFDaEQsSUFBSSxHQUFHLEdBQUcsRUFBRSxFQUNYLElBQUksR0FBWSxFQUFFLEVBQ2xCLE1BQU0sR0FBRyxLQUFLLEVBQ2QsWUFBWSxHQUFHLEtBQUssRUFDcEIsT0FBTyxHQUFHLEtBQUssRUFDZixDQUFRLENBQUM7SUFFVixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEMscUJBQXFCO1lBQ3JCLElBQUksR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksWUFBWSxFQUFFO2dCQUNuQyx3RkFBd0Y7Z0JBQ3hGLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDZjtZQUNELEdBQUcsR0FBRyxFQUFFLENBQUM7WUFDVCxZQUFZLEdBQUcsS0FBSyxDQUFDO1NBQ3JCO2FBQU0sSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hDLG1DQUFtQztZQUNuQyxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFDakIsWUFBWSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7U0FDNUM7YUFBTSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakMsNEJBQTRCO1lBQzVCLE9BQU8sR0FBRyxJQUFJLENBQUM7U0FDZjthQUFNO1lBQ04sdURBQXVEO1lBQ3ZELE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDaEIsR0FBRyxJQUFJLENBQUMsQ0FBQztTQUNUO0tBQ0Q7SUFFRCxtREFBbUQ7SUFDbkQsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ2Y7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNiLENBQUM7QUF2Q0QsOEJBdUNDIn0=